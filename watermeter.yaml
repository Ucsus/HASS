substitutions:
  pin_water_counter: GPIO14
  relays_inverted: 'true'
  water_open_delay: 1000ms
  water_close_delay: 1000ms
  warning_detect_delay: 25s

esphome:
  name: "watermeter"

esp8266:
  board: esp01_1m

# Enable logging
logger:

# Enable Home Assistant API
api:

ota:


wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Esphome-Web-D88A0F"
    password: "TTD0u4CIbupe"

captive_portal:

binary_sensor:
  - platform: gpio
    name: water counter esp32
    id: water
    device_class: moisture
    pin:
      number: $pin_water_counter
      mode: INPUT_PULLUP
      inverted: true

  - platform: gpio
    name: gas counter esp32
    id: gas
    device_class: gas
    pin:
      number: GPIO12
      mode: INPUT_PULLUP
      inverted: true

text_sensor:
  - platform: homeassistant
    entity_id: sensor.water_counter_sensor
    id: watercountersensor
  - platform: homeassistant
    entity_id: sensor.water_today
    id: watertoday
  - platform: homeassistant
    entity_id: sensor.water_yesterday
    id: wateryesterday

  - platform: homeassistant
    entity_id: sensor.gas_counter_sensor
    id: gascountersensor
  - platform: homeassistant
    entity_id: sensor.gas_today
    id: gastoday
  - platform: homeassistant
    entity_id: sensor.gas_yesterday
    id: gasyesterday

font:
  - file: 'slkscr.ttf'
    id: font1
    size: 12

  - file: 'arial.ttf'
    id: font2
    size: 12

  - file: 'roboto-medium.ttf'
    id: font3
    size: 14
    glyphs: |-
      !"%()+=,-_.:°0123456789АБВГДЕЁЖЗИЙКЛМНОПРСТУФХЦЧЩЬЫЪЭЮЯABCDEFGHIJKLMNOPQRSTUVWXYZ абвгдеёжзийклмнопрстуфхцчщьыъэюяabcdefghijklmnopqrstuvwxyz'éèàòùç/&ôœìïöñ

spi:
  clk_pin: GPIO16
  mosi_pin: GPIO5

display:
  - platform: ssd1306_spi
    model: "SSD1306 128x64"
    cs_pin: GPIO4
    dc_pin: GPIO0
    reset_pin: GPIO2
    id: oled1

    pages:
      - id: page1 # Plex currently viewing
        lambda: |-
          it.printf(0, 0, id(font3), "РАСХОД ВОДЫ:");
          it.printf(0, 14, id(font3), "Всего: %sм3", id(watercountersensor).state.c_str());
          it.printf(0, 28, id(font3), "Сегодня: %sл", id(watertoday).state.c_str());
          it.printf(0, 48, id(font3), "Вчера: %sл", id(wateryesterday).state.c_str());

      - id: page2 # Plex currently viewing
        lambda: |-
          it.printf(0, 0, id(font3), "РАСХОД ГАЗА:");
          it.printf(0, 14, id(font3), "Всего: %sм3", id(gascountersensor).state.c_str());
          it.printf(0, 28, id(font3), "Сегодня: %sм3", id(gastoday).state.c_str());
          it.printf(0, 48, id(font3), "Вчера: %sм3", id(gasyesterday).state.c_str());

interval:
  - interval: 15s
    then:
      - display.page.show_next: oled1
      - component.update: oled1
