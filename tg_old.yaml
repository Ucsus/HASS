telegram:


    sensor:

      - platform: template
        sensors:

          unavailable_now_light:
            friendly_name: "–í—Å–µ–≥–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Å–≤–µ—Ç–∏–ª—å–Ω–∏–∫–æ–≤ - "
            entity_id:
              - sensor.time
            value_template: "{{states.light | selectattr ('state', 'equalto', 'unavailable') | list | length}}"
            icon_template: mdi:counter        

          unavailable_now_switch:
            friendly_name: "–í—Å–µ–≥–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã—Ö –≤—ã–∫–ª—é—á–∞—Ç–µ–ª–µ–π - "
            entity_id:
              - sensor.time
            value_template: "{{states.switch | selectattr ('state', 'equalto', 'unavailable') | list | length}}"
            icon_template: mdi:counter 
            
          unavailable_now_sensor:
            friendly_name: "–í—Å–µ–≥–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Å–µ–Ω—Å–æ—Ä–æ–≤ - "
            entity_id:
              - sensor.time
            value_template: "{{states.sensor | selectattr ('state', 'equalto', 'unavailable') | list | length}}"
            icon_template: mdi:counter
            
          unavailable_now_binary_sensor:
            friendly_name: "–í—Å–µ–≥–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã—Ö –±–∏–Ω–∞—Ä–Ω—ã—Ö —Å–µ–Ω—Å–æ—Ä–æ–≤ - "
            entity_id:
              - sensor.time
            value_template: "{{states.binary_sensor | selectattr ('state', 'equalto', 'unavailable') | list | length}}"
            icon_template: mdi:counter

    script:
    
      send_message_1:
        alias: –û—Ç–ø—Ä–∞–≤–∫–∞ —á–µ—Ä–µ–∑ —Å–µ—Ä–≤–∏—Å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
        sequence:
        - service: notify.home
          data:
            message: "–¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è - {{ states('sensor.time') }}. –í—Å–µ –≤ –ø–æ—Ä—è–¥–∫–µ"
            
      system_report:
        alias: –û—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç—á–µ—Ç–∞ –æ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ —Å–∏—Å—Ç–µ–º—ã
        sequence:
         - service: notify.home
           data:
             message: | 
                 {{"\U0001F6C0"}} –°–æ—Å—Ç–æ—è–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã
                 {{"\U0001F567"}} –û—Ç—á–µ—Ç –∑–∞ {{ states('sensor.time_date') }}
                 {{"\U0001F4A1"}} –°–≤–µ—Ç–∏–ª—å–Ω–∏–∫–æ–≤ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ - {{ states('sensor.unavailable_now_light') }} 
                 {{"\U0001F50C"}} –°–≤–∏—Ç—á–µ–π –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ - {{ states('sensor.unavailable_now_switch') }} 
                 {{"\U0001F321"}} –°–µ–Ω—Å–æ—Ä–æ–≤ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ - {{ states('sensor.unavailable_now_sensor') }} 
                 {{"\U0001F51F"}} –ë–∏–Ω–∞—Ä–Ω—ã—Ö —Å–µ–Ω—Å–æ—Ä–æ–≤ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ - {{ states('sensor.unavailable_now_binary_sensor') }}  
    
    
    automation:   

        # - id: –ó–∞–ø—Ä–æ—Å –Ω–∞ –æ—Ç—á–µ—Ç             
        #   alias: send_report
        #   initial_state: true
        #   trigger:
        #   - platform: event
        #     event_type: telegram_command
        #     event_data:
        #       command: '/report'
        #   action:
        #   - service: script.turn_on
        #      entity_id: 
        #         - script.system_report
                
        # - id: –í–∫–ª—é—á–∏—Ç—å —Å–≤–µ—Ç             
        #   alias: send_light
        #   initial_state: true
        #   trigger:
        #   - platform: event
        #     event_type: telegram_command
        #     event_data:
        #       command: '/light'
        #   action:
        #   - service: switch.turn_on
        #      entity_id: 
        #         - switch.lustra_komnata
                

        # - id: –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –≤–∫–ª—é—á–µ–Ω–∏–∏             
        #   alias: send_light_on
        #   initial_state: true
        #   trigger:
        #   - platform: state
        #     entity_id: switch.lustra_komnata
        #     to: 'on'
        #   action:
        #   - service: notify.home
        #     data:
        #       message: "–°–≤–µ—Ç –≤–∫–ª—é—á–µ–Ω –≤ {{ states('sensor.time') }} "
              
## –°—Ç–∞—Ä—Ç–æ–≤–∞—è –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –º–µ–Ω—é
      - id: –í—ã–∑–æ–≤ –º–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ç–µ–ª–µ–≥—Ä–∞–º
        alias: telegram_menu_start
        initial_state: true
        trigger:
          - platform: event
            event_type: telegram_command
            event_data:
              command: '/go'
        action:
          - service: telegram_bot.send_message
            data:
              target: "{{ trigger.event.data.chat_id }}"
              message: |
                {{'\U0001F527'}} –í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–º–Ω–∞—Ç—É:
              inline_keyboard: 
              - '{{''\U0001F6AA''}} –í—Ö–æ–¥:/en_control, {{''\U0001F6BD''}} –¢—É–∞–ª–µ—Ç:/tu_control, {{''\U0001F6C1''}} –í–∞–Ω–Ω–∞—è:/bt_control'
              - '{{''\U0001F37D''}} –ö—É—Ö–Ω—è:/kt_control, {{''\U0001F4BB''}} –ö–æ–º–Ω–∞—Ç–∞:/mr_control, {{''\U0001F6CB''}} –ó–∞–ª:/lr_control' 
              - '{{''\U0001F6CF''}} –°–ø–∞–ª—å–Ω—è:/sr_control, {{''\U0001F9F8''}} –î–µ—Ç—Å–∫–∞—è:/cr_control, {{''\U0001F9D6''}} –ë–∞–Ω—è:/ban_control'
              - '{{''\U0001F4F7''}} –ö–∞–º–µ—Ä—ã:/cam_control, {{''\U0001F6AB''}} –£–±—Ä–∞—Ç—å –º–µ–Ω—é:/menu_hide'

    # ## –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≥–ª–∞–≤–Ω—ã–º –º–µ–Ω—é
      - id: –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ç–µ–ª–µ–≥—Ä–∞–º
        alias: telegram_menu_control
        initial_state: true
        trigger:
          - platform: event
            event_type: telegram_callback
            event_data: {}
        action:
          - choose:
              - conditions:
                  - condition: template
                    value_template: '{{ trigger.event.data.command == ''/menu_hide'' }}'
                sequence:
                  - service: telegram_bot.delete_message
                    data_template:
                      message_id: '{{ trigger.event.data.message.message_id }}'
                      chat_id: '{{ trigger.event.data.chat_id }}' 
          - choose:
              - conditions:
                  - condition: template
                    value_template: '{{ trigger.event.data.command == ''/menu_back'' }}'
                sequence:
                  - service: telegram_bot.delete_message
                    data_template:
                      message_id: '{{ trigger.event.data.message.message_id }}'
                      chat_id: '{{ trigger.event.data.chat_id }}'
                  - service: telegram_bot.send_message
                    data:
                      target: "{{ trigger.event.data.chat_id }}"
                      message: |
                        {{'\U0001F527'}} –í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–º–Ω–∞—Ç—É:
                      inline_keyboard: 
                      - '{{''\U0001F6AA''}} –í—Ö–æ–¥:/en_control, {{''\U0001F6BD''}} –¢—É–∞–ª–µ—Ç:/tu_control, {{''\U0001F6C1''}} –í–∞–Ω–Ω–∞—è:/bt_control'
                      - '{{''\U0001F37D''}} –ö—É—Ö–Ω—è:/kt_control, {{''\U0001F4BB''}} –ö–æ–º–Ω–∞—Ç–∞:/mr_control, {{''\U0001F6CB''}} –ó–∞–ª:/lr_control' 
                      - '{{''\U0001F6CF''}} –°–ø–∞–ª—å–Ω—è:/sr_control, {{''\U0001F9F8''}} –î–µ—Ç—Å–∫–∞—è:/cr_control, {{''\U0001F9D6''}} –ë–∞–Ω—è:/ban_control'
                      - '{{''\U0001F4F7''}} –ö–∞–º–µ—Ä—ã:/cam_control, {{''\U0001F6AB''}} –£–±—Ä–∞—Ç—å –º–µ–Ω—é:/menu_hide'
                      
    ## –ü—Ä–∏—Ö–æ–∂–∞—è, –∫–æ—Ä–∏–¥–æ—Ä
      - id: –ü—Ä–∏—Ö–æ–∂–∞—è –∏ –∫–æ—Ä–∏–¥–æ—Ä
        alias: telegram_en_menu_control
        initial_state: true
        trigger: 
          - platform: event
            event_type: telegram_callback
            event_data: {}
        action:
          - choose:
              - conditions:
                  - condition: template
                    value_template: '{{ trigger.event.data.command == ''/en_control'' }}'
                sequence:
                  - service: telegram_bot.delete_message
                    data_template:
                      message_id: '{{ trigger.event.data.message.message_id }}'
                      chat_id: '{{ trigger.event.data.chat_id }}'
                  - service: telegram_bot.send_message
                    data:
                      target: '{{ trigger.event.data.chat_id }}'
                      message: &msg_en |
                        {{'\U0001F6AA'}} –ü—Ä–∏—Ö–æ–∂–∞—è –∏ –∫–æ—Ä–∏–¥–æ—Ä:
                        –ö–æ—Ä–∏–¥–æ—Ä: {{'\U0001F6B6'}} - {% if is_state('binary_sensor.dd_koridor_occupancy', 'on') %} –î–≤–∏–∂–µ–Ω–∏–µ {% else %} –ù–µ—Ç –¥–≤–∏–∂–µ–Ω–∏—è {% endif %} 
                        –ü—Ä–∏—Ö–æ–∂–∞—è: {{'\U0001F6B6'}} - {% if is_state('binary_sensor.dd_prikhozhaia_occupancy', 'on') %} –î–≤–∏–∂–µ–Ω–∏–µ {% else %} –ù–µ—Ç –¥–≤–∏–∂–µ–Ω–∏—è {% endif %}
                      inline_keyboard: &keyb_en
                        - '{{''\U0001F4A1''}} –ü—Ä–∏—Ö–æ–∂–∞—è - {% if is_state(''switch.prikhozhaia_vykliuchatel'', ''off'')%}{{''üî¥''}}{% else %}{{''üü¢''}}{% endif %}:/toggle_en_light, {{''\U0001F4A1''}} –ù–æ—á–Ω–∏–∫ - {% if is_state(''light.nochnik_prikhozhaia'', ''off'')%}{{''üî¥''}}{% else %}{{''üü¢''}}{% endif %}:/toggle_en_nochnik'
                        - '{{''\U0001F4A1''}} –ö–æ—Ä–∏–¥–æ—Ä - {% if is_state(''light.lampa_koridor'', ''off'')%}{{''üî¥''}}{% else %}{{''üü¢''}}{% endif %}:/toggle_en_koridor, {{''\U0001F4A1''}} –õ–µ—Å—Ç–Ω–∏—Ü–∞ - {% if is_state(''switch.lestnitsa_vykliuchatel'', ''off'')%}{{''üî¥''}}{% else %}{{''üü¢''}}{% endif %}:/toggle_en_lestnica'
                        - '{{''\U000021A9''}} –í–µ—Ä–Ω—É—Ç—å—Å—è:/menu_back , {{''\U000021AA''}} –û–±–Ω–æ–≤–∏—Ç—å:/en_control' 
              #–ü—Ä–∏—Ö–æ–∂–∞—è
              - conditions:
                  - condition: template
                    value_template: '{{ trigger.event.data.command == ''/toggle_en_light'' }}'
                sequence:
                  - service: switch.toggle
                    target:
                        entity_id: switch.prikhozhaia_vykliuchatel
                  - delay:
                      milliseconds: 500
                  - service: telegram_bot.answer_callback_query
                    data:
                      callback_query_id: "{{ trigger.event.data.id }}"
                      message: | 
                          {{"\U0001F4AC"}} –°–≤–µ—Ç –≤ –ø—Ä–∏—Ö–æ–∂–µ–π {% if is_state('switch.prikhozhaia_vykliuchatel', 'on') %} –≤–∫–ª—é—á–µ–Ω {% else %} –≤—ã–∫–ª—é—á–µ–Ω {% endif %}
                  - service: telegram_bot.delete_message
                    data_template:
                      message_id: '{{ trigger.event.data.message.message_id }}'
                      chat_id: '{{ trigger.event.data.chat_id }}'
                  - service: telegram_bot.send_message
                    data:
                      target: '{{ trigger.event.data.chat_id }}'
                      message: *msg_en
                      inline_keyboard: *keyb_en
                      
              #–ü—Ä–∏—Ö–æ–∂–∞—è –Ω–æ—á–Ω–∏–∫
              - conditions:
                  - condition: template
                    value_template: '{{ trigger.event.data.command == ''/toggle_en_nochnik'' }}'
                sequence:
                  - service: light.toggle
                    entity_id: light.nochnik_prikhozhaia
                  - delay:
                      milliseconds: 500
                  - service: telegram_bot.answer_callback_query
                    data:
                      callback_query_id: "{{ trigger.event.data.id }}"
                      message: | 
                          {{"\U0001F4AC"}} –ù–æ—á–Ω–∏–∫ –≤ –ø—Ä–∏—Ö–æ–∂–µ–π {% if is_state('light.nochnik_prikhozhaia', 'on') %} –≤–∫–ª—é—á–µ–Ω {% else %} –≤—ã–∫–ª—é—á–µ–Ω {% endif %} 
                  - service: telegram_bot.delete_message
                    data_template:
                      message_id: '{{ trigger.event.data.message.message_id }}'
                      chat_id: '{{ trigger.event.data.chat_id }}'
                  - service: telegram_bot.send_message
                    data:
                      target: '{{ trigger.event.data.chat_id }}'
                      message: *msg_en
                      inline_keyboard: *keyb_en

              #–ö–æ—Ä–∏–¥–æ—Ä
              - conditions:
                  - condition: template
                    value_template: '{{ trigger.event.data.command == ''/toggle_en_koridor'' }}'
                sequence:
                  - service: light.toggle
                    entity_id: light.lampa_koridor
                  - delay:
                      milliseconds: 500
                  - service: telegram_bot.answer_callback_query
                    data:
                      callback_query_id: "{{ trigger.event.data.id }}"
                      message: | 
                          {{"\U0001F4AC"}} –°–≤–µ—Ç –≤ –∫–æ—Ä–∏–¥–æ—Ä–µ {% if is_state('light.lampa_koridor', 'on') %} –≤–∫–ª—é—á–µ–Ω {% else %} –≤—ã–∫–ª—é—á–µ–Ω {% endif %} 
                  - service: telegram_bot.delete_message
                    data_template:
                      message_id: '{{ trigger.event.data.message.message_id }}'
                      chat_id: '{{ trigger.event.data.chat_id }}'
                  - service: telegram_bot.send_message
                    data:
                      target: '{{ trigger.event.data.chat_id }}'
                      message: *msg_en
                      inline_keyboard: *keyb_en
                      

              #–õ–µ—Å—Ç–Ω–∏—Ü–∞
              - conditions:
                  - condition: template
                    value_template: '{{ trigger.event.data.command == ''/toggle_en_lestnica'' }}'
                sequence:
                  - service: switch.toggle
                    entity_id: switch.lestnitsa_vykliuchatel
                  - delay:
                      milliseconds: 500
                  - service: telegram_bot.answer_callback_query
                    data:
                      callback_query_id: "{{ trigger.event.data.id }}"
                      message: | 
                          {{"\U0001F4AC"}} –°–≤–µ—Ç –Ω–∞ –ª–µ—Å—Ç–Ω–∏—Ü–µ {% if is_state('switch.lestnitsa_vykliuchatel', 'on') %} –≤–∫–ª—é—á–µ–Ω {% else %} –≤—ã–∫–ª—é—á–µ–Ω {% endif %} 
                  - service: telegram_bot.delete_message
                    data_template:
                      message_id: '{{ trigger.event.data.message.message_id }}'
                      chat_id: '{{ trigger.event.data.chat_id }}'
                  - service: telegram_bot.send_message
                    data:
                      target: '{{ trigger.event.data.chat_id }}'
                      message: *msg_en
                      inline_keyboard: *keyb_en
                      
    ## –¢—É–∞–ª–µ—Ç
      - id: –¢—É–∞–ª–µ—Ç
        alias: telegram_tu_menu_control
        initial_state: true
        trigger: 
          - platform: event
            event_type: telegram_callback
            event_data: {}
        action:
          - choose:
              - conditions:
                  - condition: template
                    value_template: '{{ trigger.event.data.command == ''/tu_control'' }}'
                sequence:
                  - service: telegram_bot.delete_message
                    data_template:
                      message_id: '{{ trigger.event.data.message.message_id }}'
                      chat_id: '{{ trigger.event.data.chat_id }}'
                  - service: telegram_bot.send_message
                    data:
                      target: '{{ trigger.event.data.chat_id }}'
                      message: &msg_tu |
                        {{'\U0001F6BD'}} –¢—É–∞–ª–µ—Ç: 
                        {{'\U0001F321'}} {{ states('sensor.temperatura') }} ¬∞C
                        {{'\U0001F6B6'}} - {% if is_state('binary_sensor.toilet_motion', 'on') %} –î–≤–∏–∂–µ–Ω–∏–µ {% else %} –ù–µ—Ç –¥–≤–∏–∂–µ–Ω–∏—è {% endif %} 
                        –ì–∞—Ä–¥–µ—Ä–æ–±: {{'\U0001F6B6'}} - {% if is_state('binary_sensor.dd_garderob_occupancy', 'on') %} –î–≤–∏–∂–µ–Ω–∏–µ {% else %} –ù–µ—Ç –¥–≤–∏–∂–µ–Ω–∏—è {% endif %}
                      inline_keyboard: &keyb_tu
                        - '{{''\U0001F4A1''}} –°–≤–µ—Ç - {% if is_state(''light.svetilnik_tualet'', ''off'')%}{{''üî¥''}}{% else %}{{''üü¢''}}{% endif %}:/toggle_tu_light, {{''\U0001F4A1''}} –ü–æ–¥—Å–≤–µ—Ç–∫–∞ - {% if is_state(''light.controller_dimmable_6edba1'', ''off'')%}{{''üî¥''}}{% else %}{{''üü¢''}}{% endif %}:/toggle_tu_podsvetka'
                        - '{{''\U0001F300''}} –í–µ–Ω—Ç–∏–ª—è—Ü–∏—è - {% if is_state(''switch.rele_tualet'', ''off'')%}{{''üî¥''}}{% else %}{{''üü¢''}}{% endif %}:/toggle_tu_fan, {{''\U0001F4A1''}} –ì–∞—Ä–¥–µ—Ä–æ–± - {% if is_state(''light.svet_garderob'', ''off'')%}{{''üî¥''}}{% else %}{{''üü¢''}}{% endif %}:/toggle_tu_garderob'
                        - '{{''\U000021A9''}} –í–µ—Ä–Ω—É—Ç—å—Å—è:/menu_back , {{''\U000021AA''}} –û–±–Ω–æ–≤–∏—Ç—å:/tu_control' 
                        
              #–¢—É–∞–ª–µ—Ç —Å–≤–µ—Ç
              - conditions:
                  - condition: template
                    value_template: '{{ trigger.event.data.command == ''/toggle_tu_light'' }}'
                sequence:
                  - service: light.toggle
                    target:
                        entity_id: light.svetilnik_tualet
                  - delay:
                      milliseconds: 500
                  - service: telegram_bot.answer_callback_query
                    data:
                      callback_query_id: "{{ trigger.event.data.id }}"
                      message: | 
                          {{"\U0001F4AC"}} –°–≤–µ—Ç –≤ —Ç—É–∞–ª–µ—Ç–µ {% if is_state('light.svetilnik_tualet', 'on') %} –≤–∫–ª—é—á–µ–Ω {% else %} –≤—ã–∫–ª—é—á–µ–Ω {% endif %}
                  - service: telegram_bot.delete_message
                    data_template:
                      message_id: '{{ trigger.event.data.message.message_id }}'
                      chat_id: '{{ trigger.event.data.chat_id }}'
                  - service: telegram_bot.send_message
                    data:
                      target: '{{ trigger.event.data.chat_id }}'
                      message: *msg_tu
                      inline_keyboard: *keyb_tu
                      
              #–¢—É–∞–ª–µ—Ç –ø–æ–¥—Å–≤–µ—Ç–∫–∞
              - conditions:
                  - condition: template
                    value_template: '{{ trigger.event.data.command == ''/toggle_tu_podsvetka'' }}'
                sequence:
                  - service: light.toggle
                    target:
                        entity_id: light.controller_dimmable_6edba1
                  - delay:
                      milliseconds: 500
                  - service: telegram_bot.answer_callback_query
                    data:
                      callback_query_id: "{{ trigger.event.data.id }}"
                      message: | 
                          {{"\U0001F4AC"}} –ü–æ–¥—Å–≤–µ—Ç–∫–∞ –≤ —Ç—É–∞–ª–µ—Ç–µ {% if is_state('light.controller_dimmable_6edba1', 'on') %} –≤–∫–ª—é—á–µ–Ω–∞ {% else %} –≤—ã–∫–ª—é—á–µ–Ω–∞ {% endif %}
                  - service: telegram_bot.delete_message
                    data_template:
                      message_id: '{{ trigger.event.data.message.message_id }}'
                      chat_id: '{{ trigger.event.data.chat_id }}'
                  - service: telegram_bot.send_message
                    data:
                      target: '{{ trigger.event.data.chat_id }}'
                      message: *msg_tu
                      inline_keyboard: *keyb_tu

              #–¢—É–∞–ª–µ—Ç –≤–µ–Ω—Ç–∏–ª—è—Ü–∏—è
              - conditions:
                  - condition: template
                    value_template: '{{ trigger.event.data.command == ''/toggle_tu_fan'' }}'
                sequence:
                  - service: switch.toggle
                    target:
                        entity_id: switch.rele_tualet
                  - delay:
                      milliseconds: 500
                  - service: telegram_bot.answer_callback_query
                    data:
                      callback_query_id: "{{ trigger.event.data.id }}"
                      message: | 
                          {{"\U0001F4AC"}} –í–µ–Ω—Ç–∏–ª—è—Ü–∏—è –≤ —Ç—É–∞–ª–µ—Ç–µ {% if is_state('switch.rele_tualet', 'on') %} –≤–∫–ª—é—á–µ–Ω–∞ {% else %} –≤—ã–∫–ª—é—á–µ–Ω–∞ {% endif %}
                  - service: telegram_bot.delete_message
                    data_template:
                      message_id: '{{ trigger.event.data.message.message_id }}'
                      chat_id: '{{ trigger.event.data.chat_id }}'
                  - service: telegram_bot.send_message
                    data:
                      target: '{{ trigger.event.data.chat_id }}'
                      message: *msg_tu
                      inline_keyboard: *keyb_tu
                      
              #–ì–∞—Ä–¥–µ—Ä–æ–±
              - conditions:
                  - condition: template
                    value_template: '{{ trigger.event.data.command == ''/toggle_tu_garderob'' }}'
                sequence:
                  - service: light.toggle
                    target:
                        entity_id: light.svet_garderob
                  - delay:
                      milliseconds: 500
                  - service: telegram_bot.answer_callback_query
                    data:
                      callback_query_id: "{{ trigger.event.data.id }}"
                      message: | 
                          {{"\U0001F4AC"}} –°–≤–µ—Ç –≤ –≥–∞—Ä–¥–µ—Ä–æ–±–µ {% if is_state('light.svet_garderob', 'on') %} –≤–∫–ª—é—á–µ–Ω {% else %} –≤—ã–∫–ª—é—á–µ–Ω {% endif %}
                  - service: telegram_bot.delete_message
                    data_template:
                      message_id: '{{ trigger.event.data.message.message_id }}'
                      chat_id: '{{ trigger.event.data.chat_id }}'
                  - service: telegram_bot.send_message
                    data:
                      target: '{{ trigger.event.data.chat_id }}'
                      message: *msg_tu
                      inline_keyboard: *keyb_tu
                      
    ## –í–∞–Ω–Ω–∞—è
      - id: –í–∞–Ω–Ω–∞—è
        alias: telegram_bt_menu_control
        initial_state: true
        trigger: 
          - platform: event
            event_type: telegram_callback
            event_data: {}
        action:
          - choose:
              - conditions:
                  - condition: template
                    value_template: '{{ trigger.event.data.command == ''/bt_control'' }}'
                sequence:
                  - service: telegram_bot.delete_message
                    data_template:
                      message_id: '{{ trigger.event.data.message.message_id }}'
                      chat_id: '{{ trigger.event.data.chat_id }}'
                  - service: telegram_bot.send_message
                    data:
                      target: '{{ trigger.event.data.chat_id }}'
                      message: &msg_bt |
                        {{'\U0001F6C1'}} –í–∞–Ω–Ω–∞—è: 
                        {{'\U0001F321'}} {{ states('sensor.datchik_vlazhnosti_i_temperatury_temperature') }} ¬∞C, {{'\U0001F4A7'}} {{ states('sensor.datchik_vlazhnosti_i_temperatury_humidity') }} %
                        {{'\U0001F6B6'}} - {% if is_state('binary_sensor.dd_vannaia_occupancy', 'on') %} –î–≤–∏–∂–µ–Ω–∏–µ {% else %} –ù–µ—Ç –¥–≤–∏–∂–µ–Ω–∏—è {% endif %} 
                      inline_keyboard: &keyb_bt
                        - '{{''\U0001F4A1''}} –°–≤–µ—Ç - {% if is_state(''light.vannaia_svet'', ''off'')%}{{''üî¥''}}{% else %}{{''üü¢''}}{% endif %}:/toggle_bt_light, {{''\U0001F300''}} –í–µ–Ω—Ç–∏–ª—è—Ü–∏—è - {% if is_state(''switch.aubess_mini_smart_switch_switch_1'', ''off'')%}{{''üî¥''}}{% else %}{{''üü¢''}}{% endif %}:/toggle_bt_fan'
                        - '{{''\U000021A9''}} –í–µ—Ä–Ω—É—Ç—å—Å—è:/menu_back , {{''\U000021AA''}} –û–±–Ω–æ–≤–∏—Ç—å:/bt_control' 
                        
              #–í–∞–Ω–Ω–∞—è —Å–≤–µ—Ç
              - conditions:
                  - condition: template
                    value_template: '{{ trigger.event.data.command == ''/toggle_bt_light'' }}'
                sequence:
                  - service: light.toggle
                    target:
                        entity_id: light.vannaia_svet
                  - delay:
                      milliseconds: 500
                  - service: telegram_bot.answer_callback_query
                    data:
                      callback_query_id: "{{ trigger.event.data.id }}"
                      message: | 
                          {{"\U0001F4AC"}} –°–≤–µ—Ç –≤ –≤–∞–Ω–Ω–æ–π {% if is_state('light.vannaia_svet', 'on') %} –≤–∫–ª—é—á–µ–Ω {% else %} –≤—ã–∫–ª—é—á–µ–Ω {% endif %}
                  - service: telegram_bot.delete_message
                    data_template:
                      message_id: '{{ trigger.event.data.message.message_id }}'
                      chat_id: '{{ trigger.event.data.chat_id }}'
                  - service: telegram_bot.send_message
                    data:
                      target: '{{ trigger.event.data.chat_id }}'
                      message: *msg_bt
                      inline_keyboard: *keyb_bt


              #–í–∞–Ω–Ω–∞—è –≤–µ–Ω—Ç–∏–ª—è—Ü–∏—è
              - conditions:
                  - condition: template
                    value_template: '{{ trigger.event.data.command == ''/toggle_bt_fan'' }}'
                sequence:
                  - service: switch.toggle
                    target:
                        entity_id: switch.aubess_mini_smart_switch_switch_1
                  - delay:
                      milliseconds: 500
                  - service: telegram_bot.answer_callback_query
                    data:
                      callback_query_id: "{{ trigger.event.data.id }}"
                      message: | 
                          {{"\U0001F4AC"}} –í–µ–Ω—Ç–∏–ª—è—Ü–∏—è –≤ –≤–∞–Ω–Ω–æ–π {% if is_state('switch.aubess_mini_smart_switch_switch_1', 'on') %} –≤–∫–ª—é—á–µ–Ω–∞ {% else %} –≤—ã–∫–ª—é—á–µ–Ω–∞ {% endif %}
                  - service: telegram_bot.delete_message
                    data_template:
                      message_id: '{{ trigger.event.data.message.message_id }}'
                      chat_id: '{{ trigger.event.data.chat_id }}'
                  - service: telegram_bot.send_message
                    data:
                      target: '{{ trigger.event.data.chat_id }}'
                      message: *msg_bt
                      inline_keyboard: *keyb_bt
                      
    ## –ö—É—Ö–Ω—è
      - id: –ö—É—Ö–Ω—è
        alias: telegram_kt_menu_control
        initial_state: true
        trigger: 
          - platform: event
            event_type: telegram_callback
            event_data: {}
        action:
          - choose:
              - conditions:
                  - condition: template
                    value_template: '{{ trigger.event.data.command == ''/kt_control'' }}'
                sequence:
                  - service: telegram_bot.delete_message
                    data_template:
                      message_id: '{{ trigger.event.data.message.message_id }}'
                      chat_id: '{{ trigger.event.data.chat_id }}'
                  - service: telegram_bot.send_message
                    data:
                      target: '{{ trigger.event.data.chat_id }}'
                      message: &msg_kt |
                        {{'\U0001F37D'}} –ö—É—Ö–Ω—è: 
                        {{'\U0001F321'}} {{ states('sensor.climate_termo') }} ¬∞C
                        {{'\U0001F6B6'}} - {% if is_state('binary_sensor.dd_kukhnia_occupancy', 'on') %} –î–≤–∏–∂–µ–Ω–∏–µ {% else %} –ù–µ—Ç –¥–≤–∏–∂–µ–Ω–∏—è {% endif %} 
                        {{'\U0001F4A7'}} - {% if is_state('binary_sensor.datchik_utechki_vody_water_leak', 'on') %} –ü—Ä–æ—Ç–µ—á–∫–∞ {% else %} –°—É—Ö–æ {% endif %}, {{'\U0001F4A8'}} - {% if is_state('binary_sensor.datchik_utechki_gaza_gas', 'on') %} –ü–∞—Ö–Ω–µ—Ç –≥–∞–∑–æ–º {% else %} –í–æ–∑–¥—É—Ö —á–∏—Å—Ç—ã–π {% endif %} 
                      inline_keyboard: &keyb_kt
                        - '{{''\U0001F4A1''}} –°–≤–µ—Ç - {% if is_state(''light.svetilnik_kukhnia'', ''off'')%}{{''üî¥''}}{% else %}{{''üü¢''}}{% endif %}:/toggle_kt_light, {{''\U0001F4A1''}} –ü–æ–¥—Å–≤–µ—Ç–∫–∞ - {% if is_state(''light.podsvetka_kukhnia'', ''off'')%}{{''üî¥''}}{% else %}{{''üü¢''}}{% endif %}:/toggle_kt_podsvetka'
                        - '{{''\U0001FAD6''}} –ß–∞–π–Ω–∏–∫ - {% if is_state(''input_boolean.chainik'', ''off'')%}{{''üî¥''}}{% else %}{{''üü¢''}}{% endif %}:/toggle_kt_tea, {{''\U0001F958''}} –ú—É–ª—å—Ç—è - {% if is_state(''switch.multivarka_local'', ''off'')%}{{''üî¥''}}{% else %}{{''üü¢''}}{% endif %}:/toggle_kt_multi'
                        - '{{''\U00002615''}} –ö–æ—Ñ–µ–≤–∞—Ä–∫–∞ - {% if is_state(''switch.rozetka_kukhnia_1'', ''off'')%}{{''üî¥''}}{% else %}{{''üü¢''}}{% endif %}:/toggle_kt_coffee, {{''\U0001F9FC''}} –ü–æ—Å—É–¥–æ–º–æ–π–∫–∞ - {% if is_state(''switch.rozetka_kukhnia_2'', ''off'')%}{{''üî¥''}}{% else %}{{''üü¢''}}{% endif %}:/toggle_kt_wash'
                        - '{{''\U0001F4FA''}} –¢–í - {% if is_state(''input_boolean.kukhnia_tv'', ''off'')%}{{''üî¥''}}{% else %}{{''üü¢''}}{% endif %}:/toggle_kt_tv, {{''\U0001F321''}} –û—Ç–æ–ø–ª–µ–Ω–∏–µ - {% if is_state(''switch.kotel'', ''off'')%}{{''üî¥''}}{% else %}{{''üü¢''}}{% endif %}:/toggle_kt_heat'
                        - '{{''\U000021A9''}} –í–µ—Ä–Ω—É—Ç—å—Å—è:/menu_back , {{''\U000021AA''}} –û–±–Ω–æ–≤–∏—Ç—å:/kt_control' 
                        
              #–ö—É—Ö–Ω—è —Å–≤–µ—Ç
              - conditions:
                  - condition: template
                    value_template: '{{ trigger.event.data.command == ''/toggle_kt_light'' }}'
                sequence:
                  - service: light.toggle
                    target:
                        entity_id: light.svetilnik_kukhnia
                  - delay:
                      milliseconds: 500
                  - service: telegram_bot.answer_callback_query
                    data:
                      callback_query_id: "{{ trigger.event.data.id }}"
                      message: | 
                          {{"\U0001F4AC"}} –°–≤–µ—Ç –Ω–∞ –∫—É—Ö–Ω–µ {% if is_state('light.svetilnik_kukhnia', 'on') %} –≤–∫–ª—é—á–µ–Ω {% else %} –≤—ã–∫–ª—é—á–µ–Ω {% endif %}
                  - service: telegram_bot.delete_message
                    data_template:
                      message_id: '{{ trigger.event.data.message.message_id }}'
                      chat_id: '{{ trigger.event.data.chat_id }}'
                  - service: telegram_bot.send_message
                    data:
                      target: '{{ trigger.event.data.chat_id }}'
                      message: *msg_kt
                      inline_keyboard: *keyb_kt


              #–ö—É—Ö–Ω—è –ø–æ–¥—Å–≤–µ—Ç–∫–∞
              - conditions:
                  - condition: template
                    value_template: '{{ trigger.event.data.command == ''/toggle_kt_podsvetka'' }}'
                sequence:
                  - service: light.toggle
                    target:
                        entity_id: light.podsvetka_kukhnia
                  - delay:
                      milliseconds: 500
                  - service: telegram_bot.answer_callback_query
                    data:
                      callback_query_id: "{{ trigger.event.data.id }}"
                      message: | 
                          {{"\U0001F4AC"}} –ü–æ–¥—Å–≤–µ—Ç–∫–∞ –Ω–∞ –∫—É—Ö–Ω–µ {% if is_state('light.podsvetka_kukhnia', 'on') %} –≤–∫–ª—é—á–µ–Ω–∞ {% else %} –≤—ã–∫–ª—é—á–µ–Ω–∞ {% endif %}
                  - service: telegram_bot.delete_message
                    data_template:
                      message_id: '{{ trigger.event.data.message.message_id }}'
                      chat_id: '{{ trigger.event.data.chat_id }}'
                  - service: telegram_bot.send_message
                    data:
                      target: '{{ trigger.event.data.chat_id }}'
                      message: *msg_kt
                      inline_keyboard: *keyb_kt
                      
              #–ß–∞–π–Ω–∏–∫
              - conditions:
                  - condition: template
                    value_template: '{{ trigger.event.data.command == ''/toggle_kt_tea'' }}'
                sequence:
                  - service: input_boolean.toggle
                    target:
                        entity_id: input_boolean.chainik
                  - delay:
                      milliseconds: 500
                  - service: telegram_bot.answer_callback_query
                    data:
                      callback_query_id: "{{ trigger.event.data.id }}"
                      message: | 
                          {{"\U0001F4AC"}} –ß–∞–π–Ω–∏–∫ {% if is_state('input_boolean.chainik', 'on') %} –≤–∫–ª—é—á–µ–Ω {% else %} –≤—ã–∫–ª—é—á–µ–Ω {% endif %}
                  - service: telegram_bot.delete_message
                    data_template:
                      message_id: '{{ trigger.event.data.message.message_id }}'
                      chat_id: '{{ trigger.event.data.chat_id }}'
                  - service: telegram_bot.send_message
                    data:
                      target: '{{ trigger.event.data.chat_id }}'
                      message: *msg_kt
                      inline_keyboard: *keyb_kt
                      
              #–ú—É–ª—å—Ç—è
              - conditions:
                  - condition: template
                    value_template: '{{ trigger.event.data.command == ''/toggle_kt_multi'' }}'
                sequence:
                  - service: switch.toggle
                    target:
                        entity_id: switch.multivarka_local
                  - delay:
                      milliseconds: 500
                  - service: telegram_bot.answer_callback_query
                    data:
                      callback_query_id: "{{ trigger.event.data.id }}"
                      message: | 
                          {{"\U0001F4AC"}} –ú—É–ª—å—Ç–∏–≤–∞—Ä–∫–∞ {% if is_state('switch.multivarka_local', 'on') %} –≤–∫–ª—é—á–µ–Ω–∞ {% else %} –≤—ã–∫–ª—é—á–µ–Ω–∞ {% endif %}
                  - service: telegram_bot.delete_message
                    data_template:
                      message_id: '{{ trigger.event.data.message.message_id }}'
                      chat_id: '{{ trigger.event.data.chat_id }}'
                  - service: telegram_bot.send_message
                    data:
                      target: '{{ trigger.event.data.chat_id }}'
                      message: *msg_kt
                      inline_keyboard: *keyb_kt
                                            
              #–ö–æ—Ñ–µ–≤–∞—Ä–∫–∞
              - conditions:
                  - condition: template
                    value_template: '{{ trigger.event.data.command == ''/toggle_kt_coffee'' }}'
                sequence:
                  - service: switch.toggle
                    target:
                        entity_id: switch.rozetka_kukhnia_1
                  - delay:
                      milliseconds: 500
                  - service: telegram_bot.answer_callback_query
                    data:
                      callback_query_id: "{{ trigger.event.data.id }}"
                      message: | 
                          {{"\U0001F4AC"}} –ö–æ—Ñ–µ–≤–∞—Ä–∫–∞ {% if is_state('switch.rozetka_kukhnia_1', 'on') %} –≤–∫–ª—é—á–µ–Ω–∞ {% else %} –≤—ã–∫–ª—é—á–µ–Ω–∞ {% endif %}
                  - service: telegram_bot.delete_message
                    data_template:
                      message_id: '{{ trigger.event.data.message.message_id }}'
                      chat_id: '{{ trigger.event.data.chat_id }}'
                  - service: telegram_bot.send_message
                    data:
                      target: '{{ trigger.event.data.chat_id }}'
                      message: *msg_kt
                      inline_keyboard: *keyb_kt
                                            
              #–ü–æ—Å—É–¥–æ–º–æ–π–∫–∞
              - conditions:
                  - condition: template
                    value_template: '{{ trigger.event.data.command == ''/toggle_kt_wash'' }}'
                sequence:
                  - service: switch.toggle
                    target:
                        entity_id: switch.rozetka_kukhnia_2
                  - delay:
                      milliseconds: 500
                  - service: telegram_bot.answer_callback_query
                    data:
                      callback_query_id: "{{ trigger.event.data.id }}"
                      message: | 
                          {{"\U0001F4AC"}} –ü–æ—Å—É–¥–æ–º–æ–π–∫–∞ {% if is_state('switch.rozetka_kukhnia_2', 'on') %} –≤–∫–ª—é—á–µ–Ω–∞ {% else %} –≤—ã–∫–ª—é—á–µ–Ω–∞ {% endif %}
                  - service: telegram_bot.delete_message
                    data_template:
                      message_id: '{{ trigger.event.data.message.message_id }}'
                      chat_id: '{{ trigger.event.data.chat_id }}'
                  - service: telegram_bot.send_message
                    data:
                      target: '{{ trigger.event.data.chat_id }}'
                      message: *msg_kt
                      inline_keyboard: *keyb_kt
                      
              #–ö—É—Ö–Ω—è –¢–í
              - conditions:
                  - condition: template
                    value_template: '{{ trigger.event.data.command == ''/toggle_kt_tv'' }}'
                sequence:
                  - service: input_boolean.toggle
                    target:
                        entity_id: input_boolean.kukhnia_tv
                  - delay:
                      milliseconds: 500
                  - service: telegram_bot.answer_callback_query
                    data:
                      callback_query_id: "{{ trigger.event.data.id }}"
                      message: | 
                          {{"\U0001F4AC"}} –¢–µ–ª–µ–≤–∏–∑–æ—Ä {% if is_state('input_boolean.kukhnia_tv', 'on') %} –≤–∫–ª—é—á–µ–Ω {% else %} –≤—ã–∫–ª—é—á–µ–Ω {% endif %}
                  - service: telegram_bot.delete_message
                    data_template:
                      message_id: '{{ trigger.event.data.message.message_id }}'
                      chat_id: '{{ trigger.event.data.chat_id }}'
                  - service: telegram_bot.send_message
                    data:
                      target: '{{ trigger.event.data.chat_id }}'
                      message: *msg_kt
                      inline_keyboard: *keyb_kt
                      
              #–û—Ç–æ–ø–ª–µ–Ω–∏–µ
              - conditions:
                  - condition: template
                    value_template: '{{ trigger.event.data.command == ''/toggle_kt_heat'' }}'
                sequence:
                  - service: switch.toggle
                    target:
                        entity_id: switch.kotel
                  - delay:
                      milliseconds: 500
                  - service: telegram_bot.answer_callback_query
                    data:
                      callback_query_id: "{{ trigger.event.data.id }}"
                      message: | 
                          {{"\U0001F4AC"}} –û—Ç–æ–ø–ª–µ–Ω–∏–µ {% if is_state('switch.kotel', 'on') %} –≤–∫–ª—é—á–µ–Ω–æ {% else %} –≤—ã–∫–ª—é—á–µ–Ω–æ {% endif %}
                      show_alert: true
                  - service: telegram_bot.delete_message
                    data_template:
                      message_id: '{{ trigger.event.data.message.message_id }}'
                      chat_id: '{{ trigger.event.data.chat_id }}'
                  - service: telegram_bot.send_message
                    data:
                      target: '{{ trigger.event.data.chat_id }}'
                      message: *msg_kt
                      inline_keyboard: *keyb_kt
                      
    ## –°–ø–∞–ª—å–Ω—è
      - id: –°–ø–∞–ª—å–Ω—è
        alias: telegram_sr_menu_control
        initial_state: true
        trigger: 
          - platform: event
            event_type: telegram_callback
            event_data: {}
        action:
          - choose:
              - conditions:
                  - condition: template
                    value_template: '{{ trigger.event.data.command == ''/sr_control'' }}'
                sequence:
                  - service: telegram_bot.delete_message
                    data_template:
                      message_id: '{{ trigger.event.data.message.message_id }}'
                      chat_id: '{{ trigger.event.data.chat_id }}'
                  - service: telegram_bot.send_message
                    data:
                      target: '{{ trigger.event.data.chat_id }}'
                      message: &msg_sr |
                        {{'\U0001F6CF'}} –°–ø–∞–ª—å–Ω—è
                      inline_keyboard: &keyb_sr
                        - '{{''\U0001F4A1''}} –°–≤–µ—Ç - {% if is_state(''switch.spalnia_svet'', ''off'')%}{{''üî¥''}}{% else %}{{''üü¢''}}{% endif %}:/toggle_sr_light, {{''\U0001F4A1''}} –ù–æ—á–Ω–∏–∫ - {% if is_state(''light.nochnik'', ''off'')%}{{''üî¥''}}{% else %}{{''üü¢''}}{% endif %}:/toggle_sr_nochnik, {{''\U0001F4A1''}} –ü–ª–æ—â–∞–¥–∫–∞ - {% if is_state(''switch.ploshchadka_vykliuchatel'', ''off'')%}{{''üî¥''}}{% else %}{{''üü¢''}}{% endif %}:/toggle_sr_ploshchadka'
                        - '{{''\U0001F4FA''}} –¢–µ–ª–µ–∫ - {% if is_state(''media_player.telefunken'', ''off'')%}{{''üî¥''}}{% else %}{{''üü¢''}}{% endif %}:/toggle_sr_tv, {{''\U0001F50C''}} –£—Ç—é–≥ - {% if is_state(''switch.rozetka_spalnia'', ''off'')%}{{''üî¥''}}{% else %}{{''üü¢''}}{% endif %}:/toggle_sr_ytug'
                        - '{{''\U0001F50C''}} –ü–∏–ª–æ—Ç - {% if is_state(''switch.rozetka_spalnia_1'', ''off'')%}{{''üî¥''}}{% else %}{{''üü¢''}}{% endif %}:/toggle_sr_pilot, {{''\U0001F50C''}} –ê–ª–∏—Å–∞ - {% if is_state(''switch.rozetka_spalnia_2'', ''off'')%}{{''üî¥''}}{% else %}{{''üü¢''}}{% endif %}:/toggle_sr_alisa'
                        - '{{''\U000021A9''}} –í–µ—Ä–Ω—É—Ç—å—Å—è:/menu_back , {{''\U000021AA''}} –û–±–Ω–æ–≤–∏—Ç—å:/sr_control' 
                        
              #–°–ø–∞–ª—å–Ω—è —Å–≤–µ—Ç
              - conditions:
                  - condition: template
                    value_template: '{{ trigger.event.data.command == ''/toggle_sr_light'' }}'
                sequence:
                  - service: switch.toggle
                    target:
                        entity_id: switch.spalnia_svet
                  - delay:
                      milliseconds: 500
                  - service: telegram_bot.answer_callback_query
                    data:
                      callback_query_id: "{{ trigger.event.data.id }}"
                      message: | 
                          {{"\U0001F4AC"}} –°–≤–µ—Ç –≤ —Å–ø–∞–ª—å–Ω–µ {% if is_state('switch.spalnia_svet', 'on') %} –≤–∫–ª—é—á–µ–Ω {% else %} –≤—ã–∫–ª—é—á–µ–Ω {% endif %}
                  - service: telegram_bot.delete_message
                    data_template:
                      message_id: '{{ trigger.event.data.message.message_id }}'
                      chat_id: '{{ trigger.event.data.chat_id }}'
                  - service: telegram_bot.send_message
                    data:
                      target: '{{ trigger.event.data.chat_id }}'
                      message: *msg_sr
                      inline_keyboard: *keyb_sr
                      
              #–°–ø–∞–ª—å–Ω—è –Ω–æ—á–Ω–∏–∫
              - conditions:
                  - condition: template
                    value_template: '{{ trigger.event.data.command == ''/toggle_sr_nochnik'' }}'
                sequence:
                  - service: light.toggle
                    target:
                        entity_id: light.nochnik
                  - delay:
                      milliseconds: 500
                  - service: telegram_bot.answer_callback_query
                    data:
                      callback_query_id: "{{ trigger.event.data.id }}"
                      message: | 
                          {{"\U0001F4AC"}} –ù–æ—á–Ω–∏–∫ –≤ —Å–ø–∞–ª—å–Ω–µ {% if is_state('light.nochnik', 'on') %} –≤–∫–ª—é—á–µ–Ω {% else %} –≤—ã–∫–ª—é—á–µ–Ω {% endif %}
                  - service: telegram_bot.delete_message
                    data_template:
                      message_id: '{{ trigger.event.data.message.message_id }}'
                      chat_id: '{{ trigger.event.data.chat_id }}'
                  - service: telegram_bot.send_message
                    data:
                      target: '{{ trigger.event.data.chat_id }}'
                      message: *msg_sr
                      inline_keyboard: *keyb_sr
                      
              #–ü–ª–æ—â–∞–¥–∫–∞ —Å–≤–µ—Ç
              - conditions:
                  - condition: template
                    value_template: '{{ trigger.event.data.command == ''/toggle_sr_ploshchadka'' }}'
                sequence:
                  - service: switch.toggle
                    target:
                        entity_id: switch.ploshchadka_vykliuchatel
                  - delay:
                      milliseconds: 500
                  - service: telegram_bot.answer_callback_query
                    data:
                      callback_query_id: "{{ trigger.event.data.id }}"
                      message: | 
                          {{"\U0001F4AC"}} –°–≤–µ—Ç –Ω–∞ –ø–ª–æ—â–∞–¥–∫–µ {% if is_state('switch.ploshchadka_vykliuchatel', 'on') %} –≤–∫–ª—é—á–µ–Ω {% else %} –≤—ã–∫–ª—é—á–µ–Ω {% endif %}
                  - service: telegram_bot.delete_message
                    data_template:
                      message_id: '{{ trigger.event.data.message.message_id }}'
                      chat_id: '{{ trigger.event.data.chat_id }}'
                  - service: telegram_bot.send_message
                    data:
                      target: '{{ trigger.event.data.chat_id }}'
                      message: *msg_sr
                      inline_keyboard: *keyb_sr

              #–°–ø–∞–ª—å–Ω—è –¢–í
              - conditions:
                  - condition: template
                    value_template: '{{ trigger.event.data.command == ''/toggle_sr_tv'' }}'
                sequence:
                  - service: media_player.toggle
                    target:
                        entity_id: media_player.telefunken
                  - delay:
                      milliseconds: 500
                  - service: telegram_bot.answer_callback_query
                    data:
                      callback_query_id: "{{ trigger.event.data.id }}"
                      message: | 
                          {{"\U0001F4AC"}} –¢–µ–ª–µ–≤–∏–∑–æ—Ä {% if is_state('media_player.telefunken', 'on') %} –≤–∫–ª—é—á–µ–Ω {% else %} –≤—ã–∫–ª—é—á–µ–Ω {% endif %}
                  - service: telegram_bot.delete_message
                    data_template:
                      message_id: '{{ trigger.event.data.message.message_id }}'
                      chat_id: '{{ trigger.event.data.chat_id }}'
                  - service: telegram_bot.send_message
                    data:
                      target: '{{ trigger.event.data.chat_id }}'
                      message: *msg_sr
                      inline_keyboard: *keyb_sr
                      
              #–†–æ–∑–µ—Ç–∫–∞ —É—Ç—é–≥
              - conditions:
                  - condition: template
                    value_template: '{{ trigger.event.data.command == ''/toggle_sr_ytug'' }}'
                sequence:
                  - service: switch.toggle
                    target:
                        entity_id: switch.rozetka_spalnia
                  - delay:
                      milliseconds: 500
                  - service: telegram_bot.answer_callback_query
                    data:
                      callback_query_id: "{{ trigger.event.data.id }}"
                      message: | 
                          {{"\U0001F4AC"}} –£—Ç—é–≥ {% if is_state('switch.rozetka_spalnia', 'on') %} –≤–∫–ª—é—á–µ–Ω {% else %} –≤—ã–∫–ª—é—á–µ–Ω {% endif %}
                  - service: telegram_bot.delete_message
                    data_template:
                      message_id: '{{ trigger.event.data.message.message_id }}'
                      chat_id: '{{ trigger.event.data.chat_id }}'
                  - service: telegram_bot.send_message
                    data:
                      target: '{{ trigger.event.data.chat_id }}'
                      message: *msg_sr
                      inline_keyboard: *keyb_sr
                      
              #–ü–∏–ª–æ—Ç
              - conditions:
                  - condition: template
                    value_template: '{{ trigger.event.data.command == ''/toggle_sr_pilot'' }}'
                sequence:
                  - service: switch.toggle
                    target:
                        entity_id: switch.rozetka_spalnia_1
                  - delay:
                      milliseconds: 500
                  - service: telegram_bot.answer_callback_query
                    data:
                      callback_query_id: "{{ trigger.event.data.id }}"
                      message: | 
                          {{"\U0001F4AC"}} –ü–∏–ª–æ—Ç {% if is_state('switch.rozetka_spalnia_1', 'on') %} –≤–∫–ª—é—á–µ–Ω {% else %} –≤—ã–∫–ª—é—á–µ–Ω {% endif %}
                  - service: telegram_bot.delete_message
                    data_template:
                      message_id: '{{ trigger.event.data.message.message_id }}'
                      chat_id: '{{ trigger.event.data.chat_id }}'
                  - service: telegram_bot.send_message
                    data:
                      target: '{{ trigger.event.data.chat_id }}'
                      message: *msg_sr
                      inline_keyboard: *keyb_sr
                                            
              #–ê–ª–∏—Å–∞
              - conditions:
                  - condition: template
                    value_template: '{{ trigger.event.data.command == ''/toggle_sr_alisa'' }}'
                sequence:
                  - service: switch.toggle
                    target:
                        entity_id: switch.rozetka_spalnia_2
                  - delay:
                      milliseconds: 500
                  - service: telegram_bot.answer_callback_query
                    data:
                      callback_query_id: "{{ trigger.event.data.id }}"
                      message: | 
                          {{"\U0001F4AC"}} –ê–ª–∏—Å–∞ {% if is_state('switch.rozetka_spalnia_2', 'on') %} –≤–∫–ª—é—á–µ–Ω–∞ {% else %} –≤—ã–∫–ª—é—á–µ–Ω–∞ {% endif %}
                  - service: telegram_bot.delete_message
                    data_template:
                      message_id: '{{ trigger.event.data.message.message_id }}'
                      chat_id: '{{ trigger.event.data.chat_id }}'
                  - service: telegram_bot.send_message
                    data:
                      target: '{{ trigger.event.data.chat_id }}'
                      message: *msg_sr
                      inline_keyboard: *keyb_sr
                      
    ## –ö–æ–º–Ω–∞—Ç–∞
      - id: –ö–æ–º–Ω–∞—Ç–∞
        alias: telegram_mr_menu_control
        initial_state: true
        trigger: 
          - platform: event
            event_type: telegram_callback
            event_data: {}
        action:
          - choose:
              - conditions:
                  - condition: template
                    value_template: '{{ trigger.event.data.command == ''/mr_control'' }}'
                sequence:
                  - service: telegram_bot.delete_message
                    data_template:
                      message_id: '{{ trigger.event.data.message.message_id }}'
                      chat_id: '{{ trigger.event.data.chat_id }}'
                  - service: telegram_bot.send_message
                    data:
                      target: '{{ trigger.event.data.chat_id }}'
                      message: &msg_mr |
                        {{'\U0001F4BB'}} –ö–æ–º–Ω–∞—Ç–∞
                      inline_keyboard: &keyb_mr
                        - '{{''\U0001F4A1''}} –°–≤–µ—Ç - {% if is_state(''switch.lustra_komnata'', ''off'')%}{{''üî¥''}}{% else %}{{''üü¢''}}{% endif %}:/toggle_mr_light, {{''\U0001F4A1''}} –ù–æ—á–Ω–∏–∫ - {% if is_state(''light.nochnik_komnata'', ''off'')%}{{''üî¥''}}{% else %}{{''üü¢''}}{% endif %}:/toggle_mr_nochnik'
                        - '{{''\U0001F4A1''}} –ë—Ä–∞ - {% if is_state(''light.bra_2'', ''off'')%}{{''üî¥''}}{% else %}{{''üü¢''}}{% endif %}:/toggle_mr_bra, {{''\U0001F4A1''}} –õ–∞–≤–∞-–ª–∞–º–ø–∞ - {% if is_state(''switch.lava_lampa'', ''off'')%}{{''üî¥''}}{% else %}{{''üü¢''}}{% endif %}:/toggle_mr_lava'
                        - '{{''\U0001F50B''}} –ó–∞—Ä—è–¥–∫–∞ - {% if is_state(''switch.samovar_local'', ''off'')%}{{''üî¥''}}{% else %}{{''üü¢''}}{% endif %}:/toggle_mr_charge, {{''\U0001F5A5''}} –ö–æ–º–ø - {% if is_state(''switch.10015c681a'', ''off'')%}{{''üî¥''}}{% else %}{{''üü¢''}}{% endif %}:/toggle_mr_pc'
                        - '{{''\U0001F4FA''}} –¢–í - {% if is_state(''media_player.telek_3'', ''off'')%}{{''üî¥''}}{% else %}{{''üü¢''}}{% endif %}:/toggle_mr_tv, {{''\U0001F3AE''}} XBOX - {% if is_state(''media_player.xboxone'', ''off'')%}{{''üî¥''}}{% else %}{{''üü¢''}}{% endif %}:/toggle_mr_xbox'
                        - '{{''\U000021A9''}} –í–µ—Ä–Ω—É—Ç—å—Å—è:/menu_back , {{''\U000021AA''}} –û–±–Ω–æ–≤–∏—Ç—å:/mr_control' 
                        
              #–ö–æ–º–Ω–∞—Ç–∞ —Å–≤–µ—Ç
              - conditions:
                  - condition: template
                    value_template: '{{ trigger.event.data.command == ''/toggle_mr_light'' }}'
                sequence:
                  - service: switch.toggle
                    target:
                        entity_id: switch.lustra_komnata
                  - delay:
                      milliseconds: 500
                  - service: telegram_bot.answer_callback_query
                    data:
                      callback_query_id: "{{ trigger.event.data.id }}"
                      message: | 
                          {{"\U0001F4AC"}} –°–≤–µ—Ç –≤ –∫–æ–º–Ω–∞—Ç–µ {% if is_state('switch.lustra_komnata', 'on') %} –≤–∫–ª—é—á–µ–Ω {% else %} –≤—ã–∫–ª—é—á–µ–Ω {% endif %}
                  - service: telegram_bot.delete_message
                    data_template:
                      message_id: '{{ trigger.event.data.message.message_id }}'
                      chat_id: '{{ trigger.event.data.chat_id }}'
                  - service: telegram_bot.send_message
                    data:
                      target: '{{ trigger.event.data.chat_id }}'
                      message: *msg_mr
                      inline_keyboard: *keyb_mr
                      
              #–ö–æ–º–Ω–∞—Ç–∞ –Ω–æ—á–Ω–∏–∫
              - conditions:
                  - condition: template
                    value_template: '{{ trigger.event.data.command == ''/toggle_mr_nochnik'' }}'
                sequence:
                  - service: light.toggle
                    target:
                        entity_id: light.nochnik_komnata
                  - delay:
                      milliseconds: 500
                  - service: telegram_bot.answer_callback_query
                    data:
                      callback_query_id: "{{ trigger.event.data.id }}"
                      message: | 
                          {{"\U0001F4AC"}} –ù–æ—á–Ω–∏–∫ –≤ –∫–æ–º–Ω–∞—Ç–µ {% if is_state('light.nochnik_komnata', 'on') %} –≤–∫–ª—é—á–µ–Ω {% else %} –≤—ã–∫–ª—é—á–µ–Ω {% endif %}
                  - service: telegram_bot.delete_message
                    data_template:
                      message_id: '{{ trigger.event.data.message.message_id }}'
                      chat_id: '{{ trigger.event.data.chat_id }}'
                  - service: telegram_bot.send_message
                    data:
                      target: '{{ trigger.event.data.chat_id }}'
                      message: *msg_mr
                      inline_keyboard: *keyb_mr
                                            
              #–ö–æ–º–Ω–∞—Ç–∞ –±—Ä–∞
              - conditions:
                  - condition: template
                    value_template: '{{ trigger.event.data.command == ''/toggle_mr_bra'' }}'
                sequence:
                  - service: light.toggle
                    target:
                        entity_id: light.bra_2
                  - delay:
                      milliseconds: 500
                  - service: telegram_bot.answer_callback_query
                    data:
                      callback_query_id: "{{ trigger.event.data.id }}"
                      message: | 
                          {{"\U0001F4AC"}} –ë—Ä–∞ –≤ –∫–æ–º–Ω–∞—Ç–µ {% if is_state('light.bra_2', 'on') %} –≤–∫–ª—é—á–µ–Ω {% else %} –≤—ã–∫–ª—é—á–µ–Ω {% endif %}
                  - service: telegram_bot.delete_message
                    data_template:
                      message_id: '{{ trigger.event.data.message.message_id }}'
                      chat_id: '{{ trigger.event.data.chat_id }}'
                  - service: telegram_bot.send_message
                    data:
                      target: '{{ trigger.event.data.chat_id }}'
                      message: *msg_mr
                      inline_keyboard: *keyb_mr
                                                                  
              #–ö–æ–º–Ω–∞—Ç–∞ –ª–∞–≤–∞-–ª–∞–º–ø–∞
              - conditions:
                  - condition: template
                    value_template: '{{ trigger.event.data.command == ''/toggle_mr_lava'' }}'
                sequence:
                  - service: switch.toggle
                    target:
                        entity_id: switch.lava_lampa
                  - delay:
                      milliseconds: 500
                  - service: telegram_bot.answer_callback_query
                    data:
                      callback_query_id: "{{ trigger.event.data.id }}"
                      message: | 
                          {{"\U0001F4AC"}} –õ–∞–≤–∞-–ª–∞–º–ø–∞ –≤ –∫–æ–º–Ω–∞—Ç–µ {% if is_state('switch.lava_lampa', 'on') %} –≤–∫–ª—é—á–µ–Ω–∞ {% else %} –≤—ã–∫–ª—é—á–µ–Ω–∞ {% endif %}
                  - service: telegram_bot.delete_message
                    data_template:
                      message_id: '{{ trigger.event.data.message.message_id }}'
                      chat_id: '{{ trigger.event.data.chat_id }}'
                  - service: telegram_bot.send_message
                    data:
                      target: '{{ trigger.event.data.chat_id }}'
                      message: *msg_mr
                      inline_keyboard: *keyb_mr

              #–ó–∞—Ä—è–¥–∫–∞
              - conditions:
                  - condition: template
                    value_template: '{{ trigger.event.data.command == ''/toggle_mr_charge'' }}'
                sequence:
                  - service: switch.toggle
                    target:
                        entity_id: switch.samovar_local
                  - delay:
                      milliseconds: 500
                  - service: telegram_bot.answer_callback_query
                    data:
                      callback_query_id: "{{ trigger.event.data.id }}"
                      message: | 
                          {{"\U0001F4AC"}} –ó–∞—Ä—è–¥–∫–∞ {% if is_state('switch.samovar_local', 'on') %} –≤–∫–ª—é—á–µ–Ω–∞ {% else %} –≤—ã–∫–ª—é—á–µ–Ω–∞ {% endif %}
                  - service: telegram_bot.delete_message
                    data_template:
                      message_id: '{{ trigger.event.data.message.message_id }}'
                      chat_id: '{{ trigger.event.data.chat_id }}'
                  - service: telegram_bot.send_message
                    data:
                      target: '{{ trigger.event.data.chat_id }}'
                      message: *msg_mr
                      inline_keyboard: *keyb_mr
                      
              #–ö–æ–º–ø
              - conditions:
                  - condition: template
                    value_template: '{{ trigger.event.data.command == ''/toggle_mr_pc'' }}'
                sequence:
                  - service: switch.toggle
                    target:
                        entity_id: switch.10015c681a
                  - delay:
                      milliseconds: 500
                  - service: telegram_bot.answer_callback_query
                    data:
                      callback_query_id: "{{ trigger.event.data.id }}"
                      message: | 
                          {{"\U0001F4AC"}} –ö–æ–º–ø—å—é—Ç–µ—Ä {% if is_state('switch.10015c681a', 'on') %} –≤–∫–ª—é—á–µ–Ω {% else %} –≤—ã–∫–ª—é—á–µ–Ω {% endif %}
                  - service: telegram_bot.delete_message
                    data_template:
                      message_id: '{{ trigger.event.data.message.message_id }}'
                      chat_id: '{{ trigger.event.data.chat_id }}'
                  - service: telegram_bot.send_message
                    data:
                      target: '{{ trigger.event.data.chat_id }}'
                      message: *msg_mr
                      inline_keyboard: *keyb_mr
                      
              #–¢–í
              - conditions:
                  - condition: template
                    value_template: '{{ trigger.event.data.command == ''/toggle_mr_tv'' }}'
                sequence:
                  - service: media_player.toggle
                    target:
                        entity_id: media_player.telek_3
                  - delay:
                      milliseconds: 500
                  - service: telegram_bot.answer_callback_query
                    data:
                      callback_query_id: "{{ trigger.event.data.id }}"
                      message: | 
                          {{"\U0001F4AC"}} –¢–í {% if is_state('media_player.telek_3', 'on') %} –≤–∫–ª—é—á–µ–Ω {% else %} –≤—ã–∫–ª—é—á–µ–Ω {% endif %}
                  - service: telegram_bot.delete_message
                    data_template:
                      message_id: '{{ trigger.event.data.message.message_id }}'
                      chat_id: '{{ trigger.event.data.chat_id }}'
                  - service: telegram_bot.send_message
                    data:
                      target: '{{ trigger.event.data.chat_id }}'
                      message: *msg_mr
                      inline_keyboard: *keyb_mr
                      
              #XBOX
              - conditions:
                  - condition: template
                    value_template: '{{ trigger.event.data.command == ''/toggle_mr_xbox'' }}'
                sequence:
                  - service: media_player.toggle
                    target:
                        entity_id: media_player.xboxone
                  - delay:
                      milliseconds: 500
                  - service: telegram_bot.answer_callback_query
                    data:
                      callback_query_id: "{{ trigger.event.data.id }}"
                      message: | 
                          {{"\U0001F4AC"}} XBOX {% if is_state('media_player.xboxone', 'on') %} –≤–∫–ª—é—á–µ–Ω {% else %} –≤—ã–∫–ª—é—á–µ–Ω {% endif %}
                  - service: telegram_bot.delete_message
                    data_template:
                      message_id: '{{ trigger.event.data.message.message_id }}'
                      chat_id: '{{ trigger.event.data.chat_id }}'
                  - service: telegram_bot.send_message
                    data:
                      target: '{{ trigger.event.data.chat_id }}'
                      message: *msg_mr
                      inline_keyboard: *keyb_mr
                      
    ## –ó–∞–ª
      - id: –ó–∞–ª
        alias: telegram_lr_menu_control
        initial_state: true
        trigger: 
          - platform: event
            event_type: telegram_callback
            event_data: {}
        action:
          - choose:
              - conditions:
                  - condition: template
                    value_template: '{{ trigger.event.data.command == ''/lr_control'' }}'
                sequence:
                  - service: telegram_bot.delete_message
                    data_template:
                      message_id: '{{ trigger.event.data.message.message_id }}'
                      chat_id: '{{ trigger.event.data.chat_id }}'
                  - service: telegram_bot.send_message
                    data:
                      target: '{{ trigger.event.data.chat_id }}'
                      message: &msg_lr |
                        {{'\U0001F6CB'}} –ó–∞–ª
                      inline_keyboard: &keyb_lr
                        - '{{''\U0001F4A1''}} –°–≤–µ—Ç - {% if is_state(''switch.zal'', ''off'')%}{{''üî¥''}}{% else %}{{''üü¢''}}{% endif %}:/toggle_lr_light, {{''\U0001F50C''}} –†–æ–∑–µ—Ç–∫–∞ - {% if is_state(''switch.rozetka_zal'', ''off'')%}{{''üî¥''}}{% else %}{{''üü¢''}}{% endif %}:/toggle_lr_socket'
                        - '{{''\U000021A9''}} –í–µ—Ä–Ω—É—Ç—å—Å—è:/menu_back , {{''\U000021AA''}} –û–±–Ω–æ–≤–∏—Ç—å:/lr_control' 
                        
              #–ó–∞–ª —Å–≤–µ—Ç
              - conditions:
                  - condition: template
                    value_template: '{{ trigger.event.data.command == ''/toggle_lr_light'' }}'
                sequence:
                  - service: switch.toggle
                    target:
                        entity_id: switch.zal
                  - delay:
                      milliseconds: 500
                  - service: telegram_bot.answer_callback_query
                    data:
                      callback_query_id: "{{ trigger.event.data.id }}"
                      message: | 
                          {{"\U0001F4AC"}} –°–≤–µ—Ç –≤ –∑–∞–ª–µ {% if is_state('switch.zal', 'on') %} –≤–∫–ª—é—á–µ–Ω {% else %} –≤—ã–∫–ª—é—á–µ–Ω {% endif %}
                  - service: telegram_bot.delete_message
                    data_template:
                      message_id: '{{ trigger.event.data.message.message_id }}'
                      chat_id: '{{ trigger.event.data.chat_id }}'
                  - service: telegram_bot.send_message
                    data:
                      target: '{{ trigger.event.data.chat_id }}'
                      message: *msg_lr
                      inline_keyboard: *keyb_lr
                      
                        
              #–ó–∞–ª —Ä–æ–∑–µ—Ç–∫–∞
              - conditions:
                  - condition: template
                    value_template: '{{ trigger.event.data.command == ''/toggle_lr_socket'' }}'
                sequence:
                  - service: switch.toggle
                    target:
                        entity_id: switch.rozetka_zal
                  - delay:
                      milliseconds: 500
                  - service: telegram_bot.answer_callback_query
                    data:
                      callback_query_id: "{{ trigger.event.data.id }}"
                      message: | 
                          {{"\U0001F4AC"}} –†–æ–∑–µ—Ç–∫–∞ –≤ –∑–∞–ª–µ {% if is_state('switch.rozetka_zal', 'on') %} –≤–∫–ª—é—á–µ–Ω–∞ {% else %} –≤—ã–∫–ª—é—á–µ–Ω–∞ {% endif %}
                  - service: telegram_bot.delete_message
                    data_template:
                      message_id: '{{ trigger.event.data.message.message_id }}'
                      chat_id: '{{ trigger.event.data.chat_id }}'
                  - service: telegram_bot.send_message
                    data:
                      target: '{{ trigger.event.data.chat_id }}'
                      message: *msg_lr
                      inline_keyboard: *keyb_lr
                      
    ## –î–µ—Ç—Å–∫–∞—è
      - id: –î–µ—Ç—Å–∫–∞—è
        alias: telegram_cr_menu_control
        initial_state: true
        trigger: 
          - platform: event
            event_type: telegram_callback
            event_data: {}
        action:
          - choose:
              - conditions:
                  - condition: template
                    value_template: '{{ trigger.event.data.command == ''/cr_control'' }}'
                sequence:
                  - service: telegram_bot.delete_message
                    data_template:
                      message_id: '{{ trigger.event.data.message.message_id }}'
                      chat_id: '{{ trigger.event.data.chat_id }}'
                  - service: telegram_bot.send_message
                    data:
                      target: '{{ trigger.event.data.chat_id }}'
                      message: &msg_cr |
                        {{'\U0001F9F8'}} –î–µ—Ç—Å–∫–∞—è
                      inline_keyboard: &keyb_cr
                        - '{{''\U0001F4A1''}} –°–≤–µ—Ç - {% if is_state(''switch.detskaia_vykliuchatel'', ''off'')%}{{''üî¥''}}{% else %}{{''üü¢''}}{% endif %}:/toggle_cr_light, {{''\U0001F4A1''}}'
                        - '{{''\U000021A9''}} –í–µ—Ä–Ω—É—Ç—å—Å—è:/menu_back , {{''\U000021AA''}} –û–±–Ω–æ–≤–∏—Ç—å:/cr_control' 
                        
              #–î–µ—Ç—Å–∫–∞—è —Å–≤–µ—Ç
              - conditions:
                  - condition: template
                    value_template: '{{ trigger.event.data.command == ''/toggle_cr_light'' }}'
                sequence:
                  - service: switch.toggle
                    target:
                        entity_id: switch.detskaia_vykliuchatel
                  - delay:
                      milliseconds: 500
                  - service: telegram_bot.answer_callback_query
                    data:
                      callback_query_id: "{{ trigger.event.data.id }}"
                      message: | 
                          {{"\U0001F4AC"}} –°–≤–µ—Ç –≤ –¥–µ—Ç—Å–∫–æ–π {% if is_state('switch.detskaia_vykliuchatel', 'on') %} –≤–∫–ª—é—á–µ–Ω {% else %} –≤—ã–∫–ª—é—á–µ–Ω {% endif %}
                  - service: telegram_bot.delete_message
                    data_template:
                      message_id: '{{ trigger.event.data.message.message_id }}'
                      chat_id: '{{ trigger.event.data.chat_id }}'
                  - service: telegram_bot.send_message
                    data:
                      target: '{{ trigger.event.data.chat_id }}'
                      message: *msg_cr
                      inline_keyboard: *keyb_cr
                      
    ## –ë–∞–Ω—è
      - id: –ë–∞–Ω—è
        alias: telegram_ban_menu_control
        initial_state: true
        trigger: 
          - platform: event
            event_type: telegram_callback
            event_data: {}
        action:
          - choose:
              - conditions:
                  - condition: template
                    value_template: '{{ trigger.event.data.command == ''/ban_control'' }}'
                sequence:
                  - service: telegram_bot.delete_message
                    data_template:
                      message_id: '{{ trigger.event.data.message.message_id }}'
                      chat_id: '{{ trigger.event.data.chat_id }}'
                  - service: telegram_bot.send_message
                    data:
                      target: '{{ trigger.event.data.chat_id }}'
                      message: &msg_ban |
                        {{'\U0001F9D6'}} –ë–∞–Ω—è:
                        {{'\U0001F321'}} {{ states('sensor.banya_temperature_2') }} ¬∞C
                        –ë–µ—Å–µ–¥–∫–∞ - {{'\U0001F321'}} {{ states('sensor.temperatura_besedka') }} ¬∞C
                      inline_keyboard: &keyb_ban
                        - '{{''\U0001F4A1''}} –°–≤–µ—Ç - {% if is_state(''switch.banya2'', ''off'')%}{{''üî¥''}}{% else %}{{''üü¢''}}{% endif %}:/toggle_ban_light, {{''\U0001F4A7''}} –í–æ–¥–∞ - {% if is_state(''switch.banya2'', ''off'')%}{{''üî¥''}}{% else %}{{''üü¢''}}{% endif %}:/toggle_ban_water'
                        - '{{''\U000026A1''}} –ë–µ—Å–µ–¥–∫–∞ - {% if is_state(''switch.besedka2'', ''off'')%}{{''üî¥''}}{% else %}{{''üü¢''}}{% endif %}:/toggle_bes_power, {{''\U0001F4A1''}} –°–≤–µ—Ç –≤ –±–µ—Å–µ–¥–∫–µ - {% if is_state(''switch.besedka'', ''on'')%}{{''üü¢''}}{% else %}{{''üî¥''}}{% endif %}:/toggle_bes_light'
                        - '{{''\U0001F4A1''}} –ü—Ä–æ–∂–µ–∫—Ç–æ—Ä –≤—Ö–æ–¥ - {% if is_state(''switch.prozhektor_vkhod_switch_1'', ''on'')%}{{''üü¢''}}{% else %}{{''üî¥''}}{% endif %}:/toggle_prozh_vhod, {{''\U0001F4A1''}} –ü—Ä–æ–∂–µ–∫—Ç–æ—Ä –±–∞–Ω—è - {% if is_state(''switch.prozhektor_bania_switch_1'', ''on'')%}{{''üü¢''}}{% else %}{{''üî¥''}}{% endif %}:/toggle_prozh_ban'
                        - '{{''\U000021A9''}} –í–µ—Ä–Ω—É—Ç—å—Å—è:/menu_back , {{''\U000021AA''}} –û–±–Ω–æ–≤–∏—Ç—å:/ban_control' 
                        
              #–ë–∞–Ω—è —Å–≤–µ—Ç
              - conditions:
                  - condition: template
                    value_template: '{{ trigger.event.data.command == ''/toggle_ban_light'' }}'
                sequence:
                  - service: switch.toggle
                    target:
                        entity_id: switch.banya2
                  - delay:
                      milliseconds: 500
                  - service: telegram_bot.answer_callback_query
                    data:
                      callback_query_id: "{{ trigger.event.data.id }}"
                      message: | 
                          {{"\U0001F4AC"}} –°–≤–µ—Ç –≤ –±–∞–Ω–µ {% if is_state('switch.banya2', 'on') %} –≤–∫–ª—é—á–µ–Ω {% else %} –≤—ã–∫–ª—é—á–µ–Ω {% endif %}
                  - service: telegram_bot.delete_message
                    data_template:
                      message_id: '{{ trigger.event.data.message.message_id }}'
                      chat_id: '{{ trigger.event.data.chat_id }}'
                  - service: telegram_bot.send_message
                    data:
                      target: '{{ trigger.event.data.chat_id }}'
                      message: *msg_ban
                      inline_keyboard: *keyb_ban
                      
              #–í–æ–¥–∞
              - conditions:
                  - condition: template
                    value_template: '{{ trigger.event.data.command == ''/toggle_ban_water'' }}'
                sequence:
                  - service: switch.toggle
                    target:
                        entity_id: switch.voda
                  - delay:
                      milliseconds: 500
                  - service: telegram_bot.answer_callback_query
                    data:
                      callback_query_id: "{{ trigger.event.data.id }}"
                      message: | 
                          {{"\U0001F4AC"}} –í–æ–¥–∞ –≤ –±–∞–Ω–µ {% if is_state('switch.voda', 'on') %} –≤–∫–ª—é—á–µ–Ω–∞ {% else %} –≤—ã–∫–ª—é—á–µ–Ω–∞ {% endif %}
                  - service: telegram_bot.delete_message
                    data_template:
                      message_id: '{{ trigger.event.data.message.message_id }}'
                      chat_id: '{{ trigger.event.data.chat_id }}'
                  - service: telegram_bot.send_message
                    data:
                      target: '{{ trigger.event.data.chat_id }}'
                      message: *msg_ban
                      inline_keyboard: *keyb_ban
                      
                        
              #–ë–µ—Å–µ–¥–∫–∞
              - conditions:
                  - condition: template
                    value_template: '{{ trigger.event.data.command == ''/toggle_bes_power'' }}'
                sequence:
                  - service: switch.toggle
                    target:
                        entity_id: switch.besedka2
                  - delay:
                      milliseconds: 500
                  - service: telegram_bot.answer_callback_query
                    data:
                      callback_query_id: "{{ trigger.event.data.id }}"
                      message: | 
                          {{"\U0001F4AC"}} –≠–ª–µ–∫—Ç—Ä–∏—á–µ—Å—Ç–≤–æ –≤ –±–µ—Å–µ–¥–∫–µ {% if is_state('switch.besedka2', 'on') %} –≤–∫–ª—é—á–µ–Ω–æ {% else %} –≤—ã–∫–ª—é—á–µ–Ω–æ {% endif %}
                  - service: telegram_bot.delete_message
                    data_template:
                      message_id: '{{ trigger.event.data.message.message_id }}'
                      chat_id: '{{ trigger.event.data.chat_id }}'
                  - service: telegram_bot.send_message
                    data:
                      target: '{{ trigger.event.data.chat_id }}'
                      message: *msg_ban
                      inline_keyboard: *keyb_ban
                      
                        
              #–ë–µ—Å–µ–¥–∫–∞ —Å–≤–µ—Ç
              - conditions:
                  - condition: template
                    value_template: '{{ trigger.event.data.command == ''/toggle_bes_light'' }}'
                sequence:
                  - service: switch.toggle
                    target:
                        entity_id: switch.besedka
                  - delay:
                      milliseconds: 500
                  - service: telegram_bot.answer_callback_query
                    data:
                      callback_query_id: "{{ trigger.event.data.id }}"
                      message: | 
                          {{"\U0001F4AC"}} –°–≤–µ—Ç –≤ –±–µ—Å–µ–¥–∫–µ {% if is_state('switch.besedka', 'on') %} –≤–∫–ª—é—á–µ–Ω {% else %} –≤—ã–∫–ª—é—á–µ–Ω {% endif %}
                  - service: telegram_bot.delete_message
                    data_template:
                      message_id: '{{ trigger.event.data.message.message_id }}'
                      chat_id: '{{ trigger.event.data.chat_id }}'
                  - service: telegram_bot.send_message
                    data:
                      target: '{{ trigger.event.data.chat_id }}'
                      message: *msg_ban
                      inline_keyboard: *keyb_ban
                      
              #–ü—Ä–æ–∂–µ–∫—Ç–æ—Ä –≤—Ö–æ–¥
              - conditions:
                  - condition: template
                    value_template: '{{ trigger.event.data.command == ''/toggle_prozh_vhod'' }}'
                sequence:
                  - service: switch.toggle
                    target:
                        entity_id: switch.prozhektor_vkhod_switch_1
                  - delay:
                      milliseconds: 500
                  - service: telegram_bot.answer_callback_query
                    data:
                      callback_query_id: "{{ trigger.event.data.id }}"
                      message: | 
                          {{"\U0001F4AC"}} –ü—Ä–æ–∂–µ–∫—Ç–æ—Ä —É –≤—Ö–æ–¥–∞ {% if is_state('switch.prozhektor_vkhod_switch_1', 'on') %} –≤–∫–ª—é—á–µ–Ω {% else %} –≤—ã–∫–ª—é—á–µ–Ω {% endif %}
                  - service: telegram_bot.delete_message
                    data_template:
                      message_id: '{{ trigger.event.data.message.message_id }}'
                      chat_id: '{{ trigger.event.data.chat_id }}'
                  - service: telegram_bot.send_message
                    data:
                      target: '{{ trigger.event.data.chat_id }}'
                      message: *msg_ban
                      inline_keyboard: *keyb_ban
                      
                                            
              #–ü—Ä–æ–∂–µ–∫—Ç–æ—Ä –±–∞–Ω—è
              - conditions:
                  - condition: template
                    value_template: '{{ trigger.event.data.command == ''/toggle_prozh_ban'' }}'
                sequence:
                  - service: switch.toggle
                    target:
                        entity_id: switch.prozhektor_bania_switch_1
                  - delay:
                      milliseconds: 500
                  - service: telegram_bot.answer_callback_query
                    data:
                      callback_query_id: "{{ trigger.event.data.id }}"
                      message: | 
                          {{"\U0001F4AC"}} –ü—Ä–æ–∂–µ–∫—Ç–æ—Ä —É –±–∞–Ω–∏ {% if is_state('switch.prozhektor_bania_switch_1', 'on') %} –≤–∫–ª—é—á–µ–Ω {% else %} –≤—ã–∫–ª—é—á–µ–Ω {% endif %}
                  - service: telegram_bot.delete_message
                    data_template:
                      message_id: '{{ trigger.event.data.message.message_id }}'
                      chat_id: '{{ trigger.event.data.chat_id }}'
                  - service: telegram_bot.send_message
                    data:
                      target: '{{ trigger.event.data.chat_id }}'
                      message: *msg_ban
                      inline_keyboard: *keyb_ban
                      
    ## –ö–∞–º–µ—Ä—ã
      - id: –ö–∞–º–µ—Ä—ã
        alias: telegram_cam_menu_control
        initial_state: true
        trigger: 
          - platform: event
            event_type: telegram_callback
            event_data: {}
        action:
          - choose:
              - conditions:
                  - condition: template
                    value_template: '{{ trigger.event.data.command == ''/cam_control'' }}'
                sequence:
                  - service: telegram_bot.delete_message
                    data_template:
                      message_id: '{{ trigger.event.data.message.message_id }}'
                      chat_id: '{{ trigger.event.data.chat_id }}'
                  - service: telegram_bot.send_message
                    data:
                      target: '{{ trigger.event.data.chat_id }}'
                      message: &msg_cam |
                        {{'\U0001F4F7'}} –ö–∞–º–µ—Ä—ã
                      inline_keyboard: &keyb_cam
                        - '{{''\U0001F5BC''}} –í—Ö–æ–¥ :/run_cam1_shot, {{''\U0001F5BC''}} –î–≤–æ—Ä :/run_cam2_shot'
                        - '{{''\U000021A9''}} –í–µ—Ä–Ω—É—Ç—å—Å—è:/menu_back , {{''\U000021AA''}} –û–±–Ω–æ–≤–∏—Ç—å:/cam_control' 
                        
              #–í—Ö–æ–¥
              - conditions:
                  - condition: template
                    value_template: '{{ trigger.event.data.command == ''/run_cam1_shot'' }}'
                sequence:
                  - service: script.1668015230932
                  - delay:
                      milliseconds: 500
                  - service: telegram_bot.answer_callback_query
                    data:
                      callback_query_id: "{{ trigger.event.data.id }}"
                      message: | 
                          {{"\U0001F4AC"}} –ß–∏–∫-—á–∏–∫
                  - service: telegram_bot.delete_message
                    data_template:
                      message_id: '{{ trigger.event.data.message.message_id }}'
                      chat_id: '{{ trigger.event.data.chat_id }}'
                  - service: telegram_bot.send_message
                    data:
                      target: '{{ trigger.event.data.chat_id }}'
                      message: *msg_cam
                      inline_keyboard: *keyb_cam
                      
              #–î–≤–æ—Ä
              - conditions:
                  - condition: template
                    value_template: '{{ trigger.event.data.command == ''/run_cam2_shot'' }}'
                sequence:
                  - service: script.1668015279643
                  - delay:
                      milliseconds: 500
                  - service: telegram_bot.answer_callback_query
                    data:
                      callback_query_id: "{{ trigger.event.data.id }}"
                      message: | 
                          {{"\U0001F4AC"}} –ß–∏–∫-—á–∏–∫
                  - service: telegram_bot.delete_message
                    data_template:
                      message_id: '{{ trigger.event.data.message.message_id }}'
                      chat_id: '{{ trigger.event.data.chat_id }}'
                  - service: telegram_bot.send_message
                    data:
                      target: '{{ trigger.event.data.chat_id }}'
                      message: *msg_cam
                      inline_keyboard: *keyb_cam
